{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auto-verzekering-create/auto-verzekering-create.component.css","webpack:///./src/app/auto-verzekering-create/auto-verzekering-create.component.html","webpack:///./src/app/auto-verzekering-create/auto-verzekering-create.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient} from  '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class APIService {\n  API_URL = 'http://localhost:8000';\n  \n  constructor(private httpClient: HttpClient) {}\n  \n  createAutoVerzekering(autoVerzekering: any) {\n    return this.httpClient.post(`${this.API_URL}/auto-verzekering/`, autoVerzekering);\n  }\n}\n","import { AutoVerzekeringCreateComponent } from './auto-verzekering-create/auto-verzekering-create.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'auto-verzekering', pathMatch: 'full' },\r\n  {\r\n    path: 'auto-verzekering',\r\n    component: AutoVerzekeringCreateComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welkom bij '{{ title }}'!\\n  </h1>\\n</div>\\n\\n<a [routerLink]=\\\"'/auto-verzekering'\\\"> Auto Verzekering </a>\\n<div>\\n    <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'verzekeren';\n}\n","import {AppRoutingModule} from  './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from  '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AutoVerzekeringCreateComponent } from './auto-verzekering-create/auto-verzekering-create.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AutoVerzekeringCreateComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h1>\\nVraag auto verzekering aan\\n</h1>\\n\\n<form #autoVerzekeringForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveAutoVerzekering(autoVerzekeringForm.value)\\\">\\n\\t<input [ngModel]=\\\"autoVerzekering.voornaam\\\" required name=\\\"voornaam\\\" />\\n\\t<input [ngModel]=\\\"autoVerzekering.achternaam\\\" required name=\\\"achternaam\\\" />\\n\\t\\n\\t<input [ngModel]=\\\"autoVerzekering.type\\\" type=\\\"radio\\\" value=\\\"WA\\\" name=\\\"type\\\" /> WA\\n\\t<input [ngModel]=\\\"autoVerzekering.type\\\" type=\\\"radio\\\" value=\\\"WA-beperkt\\\" name=\\\"type\\\" /> WA Beperkt\\n\\t<input [ngModel]=\\\"autoVerzekering.type\\\" type=\\\"radio\\\" value=\\\"WA-volledig\\\" name=\\\"type\\\" /> WA Volledig\\n\\t\\n\\t<button type=\\\"submit\\\">Vraag auto verzekering aan</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { APIService } from  '../api.service';\n\n@Component({\n  selector: 'app-auto-verzekering-create',\n  templateUrl: './auto-verzekering-create.component.html',\n  styleUrls: ['./auto-verzekering-create.component.css']\n})\nexport class AutoVerzekeringCreateComponent implements OnInit {\n  autoVerzekering: any = {};\n\n  constructor(private  apiService:  APIService) { }\n\n  ngOnInit() {\n  }\n\n  public saveAutoVerzekering(form: NgForm) {\n    this.apiService.createAutoVerzekering(form).subscribe(response => {\n      console.log('test');\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}